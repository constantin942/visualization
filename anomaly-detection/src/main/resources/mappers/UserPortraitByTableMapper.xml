<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mingshi.skyflying.anomaly_detection.dao.UserPortraitByTableMapper">
    <resultMap id="CoarseInfoMap" type="com.mingshi.skyflying.common.domain.UserCoarseInfo">
        <result property="userName" column="username" jdbcType="VARCHAR"/>
        <result property="usualVisitedData" column="table_name" jdbcType="VARCHAR"/>
        <result property="visitedCount" column="count" jdbcType="INTEGER"/>
    </resultMap>

    <insert id="insertBatch" parameterType="java.util.List">
        insert into user_portrait_by_table (username, table_name, count)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.username,jdbcType=VARCHAR}, #{item.tableName,jdbcType=VARCHAR}, #{item.count,jdbcType=INTEGER}
            )
        </foreach>
    </insert>
    <insert id="insertOne" parameterType="com.mingshi.skyflying.anomaly_detection.domain.UserPortraitByTableDo">
        insert into user_portrait_by_table (username, table_name, count, create_time)
        values (#{username,jdbcType=VARCHAR}, #{tableName,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER},
                #{createTime,jdbcType=DATE});
    </insert>

    <select id="selectPeriodInfo" parameterType="integer"
            resultType="com.mingshi.skyflying.anomaly_detection.domain.UserPortraitByTableDo">
        select username, table_name, count
        from user_portrait_by_table
        where #{portraitByTablePeriod,jdbcType=INTEGER} > TO_DAYS(NOW()) - TO_DAYS(`create_time`)
    </select>
    <select id="selectByNameAndTime"
            resultType="com.mingshi.skyflying.anomaly_detection.domain.UserPortraitByTableDo">
        select *
        from user_portrait_by_table
        where #{username,jdbcType=VARCHAR} = username
          and 1 > to_days(#{time,jdbcType=DATE}) - TO_DAYS(`create_time`)
          and #{tableName,jdbcType=VARCHAR} = table_name limit 1;
    </select>
    <select id="selectFrequntList" resultType="java.util.Map">
        select table_name, sum(count) as counts
        from user_portrait_by_table
        where #{username,jdbcType=VARCHAR} = username
          and #{period,jdbcType=INTEGER} > TO_DAYS(NOW()) - TO_DAYS(`create_time`)
        group by table_name
        having counts >= #{threshold,jdbcType=INTEGER}
    </select>
    <select id="selectUnFrequntList" resultType="java.util.Map">
        select table_name, sum(count) as counts
        from user_portrait_by_table
        where #{username,jdbcType=VARCHAR} = username
          and #{period,jdbcType=INTEGER} > TO_DAYS(NOW()) - TO_DAYS(`create_time`)
        group by table_name
        having #{threshold,jdbcType=INTEGER} > counts
    </select>

    <select id="selectCoarseCountsOfUser" resultMap="CoarseInfoMap"
            resultType="com.mingshi.skyflying.common.domain.UserCoarseInfo">
        select username, count, table_name
        from user_portrait_by_table
        where  #{username,jdbcType=VARCHAR} = username
          and #{period,jdbcType=INTEGER} > TO_DAYS(NOW()) - TO_DAYS(`create_time`)
        order by count desc limit 1;

    </select>

    <select id="getAllUser" parameterType="java.util.Map" resultType="java.lang.String">
        select distinct(username)
        from user_portrait_by_table
        where #{period,jdbcType=INTEGER} > TO_DAYS(NOW()) - TO_DAYS(`create_time`)
        <if test="userName != null and  userName != null   ">
            and username like concat('%',#{userName},'%')
        </if>
        <if test="pageNo != null and  pageSize != null   ">
            LIMIT #{pageNo},#{pageSize}
        </if>
    </select>

    <select id="getAllUserByOrder" parameterType="java.util.Map" resultType="java.lang.String">
        select distinct(username)
        from user_portrait_by_table
        where #{period,jdbcType=INTEGER} > TO_DAYS(NOW()) - TO_DAYS(`create_time`)
        <if test="userName != null and  userName != null   ">
            and username like concat('%',#{userName},'%')
        </if>
        group by username
        order by sum(count) desc
        <if test="pageNo != null and  pageSize != null   ">
            LIMIT #{pageNo},#{pageSize}
        </if>
    </select>

    <select id="getAllUserCount" resultType="java.lang.Integer">
        select count(distinct(username))
        from user_portrait_by_table
        where #{period,jdbcType=INTEGER} > TO_DAYS(NOW()) - TO_DAYS(`create_time`)
        <if test="userName != null and  userName != null   ">
            and username like concat('%',#{userName},'%')
        </if>
    </select>
    <select id="getLastVisitedDate" resultType="java.lang.String" parameterType="string">
        select start_time
        from ms_segment_detail
        where user_name = #{username,jdbcType=VARCHAR}
        order by start_time desc limit 1;
    </select>
    <select id="getCounts" resultType="java.lang.Long">
        select count(*) from  ms_segment_detail
        where  #{username,jdbcType=VARCHAR} = user_name and db_instance is not null and ms_table_name is not null;
    </select>


    <update id="updateByPrimaryKeySelective"
            parameterType="com.mingshi.skyflying.anomaly_detection.domain.UserPortraitByTableDo">
        update user_portrait_by_table
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="tableName != null">
                table_name = #{tableName,jdbcType=VARCHAR},
            </if>
            <if test="count != null">
                count = #{count,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>
