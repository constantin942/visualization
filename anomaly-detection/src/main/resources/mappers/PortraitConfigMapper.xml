<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mingshi.skyflying.anomaly_detection.dao.PortraitConfigMapper">
    <resultMap id="BaseResultMap" type="com.mingshi.skyflying.anomaly_detection.domain.PortraitConfig">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="rule_table_period" jdbcType="INTEGER" property="ruleTablePeriod"/>
        <result column="rule_table_count" jdbcType="INTEGER" property="ruleTableCount"/>
        <result column="rule_time_period" jdbcType="INTEGER" property="ruleTimePeriod"/>
        <result column="rule_time_rate" jdbcType="DOUBLE" property="ruleTimeRate"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        , rule_table_period, rule_table_count, rule_time_period, rule_time_rate, is_deleted
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from portrait_config
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectOne" resultType="com.mingshi.skyflying.anomaly_detection.domain.PortraitConfig">
        select *
        from portrait_config
        where is_deleted = 0 limit 1;
    </select>
    <select id="selectByName" resultType="java.lang.String" parameterType="string">
        select `value` from dic_item where name = #{typeName,jdbcType=VARCHAR} order by sort
    </select>
    <select id="selectOneByName" resultType="java.lang.String" parameterType="string">
        select `value` from dic_item where name = #{typeName,jdbcType=VARCHAR} limit 1;
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from portrait_config
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <update id="deleteOld">
        update portrait_config
        set is_deleted=1
        where is_deleted = 0;
    </update>

    <insert id="insert" parameterType="com.mingshi.skyflying.anomaly_detection.domain.PortraitConfig">
        insert into portrait_config (id, rule_table_period, rule_table_count,
                                     rule_time_period, rule_time_rate, is_deleted)
        values (#{id,jdbcType=INTEGER}, #{ruleTablePeriod,jdbcType=INTEGER}, #{ruleTableCount,jdbcType=INTEGER},
                #{ruleTimePeriod,jdbcType=INTEGER}, #{ruleTimeRate,jdbcType=DOUBLE}, #{isDeleted,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.mingshi.skyflying.anomaly_detection.domain.PortraitConfig">
        insert into portrait_config
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="ruleTablePeriod != null">
                rule_table_period,
            </if>
            <if test="ruleTableCount != null">
                rule_table_count,
            </if>
            <if test="ruleTimePeriod != null">
                rule_time_period,
            </if>
            <if test="ruleTimeRate != null">
                rule_time_rate,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="ruleTablePeriod != null">
                #{ruleTablePeriod,jdbcType=INTEGER},
            </if>
            <if test="ruleTableCount != null">
                #{ruleTableCount,jdbcType=INTEGER},
            </if>
            <if test="ruleTimePeriod != null">
                #{ruleTimePeriod,jdbcType=INTEGER},
            </if>
            <if test="ruleTimeRate != null">
                #{ruleTimeRate,jdbcType=DOUBLE},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByExampleSelective" parameterType="map">
        update portrait_config
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.ruleTablePeriod != null">
                rule_table_period = #{record.ruleTablePeriod,jdbcType=INTEGER},
            </if>
            <if test="record.ruleTableCount != null">
                rule_table_count = #{record.ruleTableCount,jdbcType=INTEGER},
            </if>
            <if test="record.ruleTimePeriod != null">
                rule_time_period = #{record.ruleTimePeriod,jdbcType=INTEGER},
            </if>
            <if test="record.ruleTimeRate != null">
                rule_time_rate = #{record.ruleTimeRate,jdbcType=DOUBLE},
            </if>
            <if test="record.isDeleted != null">
                is_deleted = #{record.isDeleted,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update portrait_config
        set id = #{record.id,jdbcType=INTEGER},
        rule_table_period = #{record.ruleTablePeriod,jdbcType=INTEGER},
        rule_table_count = #{record.ruleTableCount,jdbcType=INTEGER},
        rule_time_period = #{record.ruleTimePeriod,jdbcType=INTEGER},
        rule_time_rate = #{record.ruleTimeRate,jdbcType=DOUBLE},
        is_deleted = #{record.isDeleted,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.mingshi.skyflying.anomaly_detection.domain.PortraitConfig">
        update portrait_config
        <set>
            <if test="ruleTablePeriod != null">
                rule_table_period = #{ruleTablePeriod,jdbcType=INTEGER},
            </if>
            <if test="ruleTableCount != null">
                rule_table_count = #{ruleTableCount,jdbcType=INTEGER},
            </if>
            <if test="ruleTimePeriod != null">
                rule_time_period = #{ruleTimePeriod,jdbcType=INTEGER},
            </if>
            <if test="ruleTimeRate != null">
                rule_time_rate = #{ruleTimeRate,jdbcType=DOUBLE},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.mingshi.skyflying.anomaly_detection.domain.PortraitConfig">
        update portrait_config
        set rule_table_period = #{ruleTablePeriod,jdbcType=INTEGER},
            rule_table_count  = #{ruleTableCount,jdbcType=INTEGER},
            rule_time_period  = #{ruleTimePeriod,jdbcType=INTEGER},
            rule_time_rate    = #{ruleTimeRate,jdbcType=DOUBLE},
            is_deleted        = #{isDeleted,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="setDemoMode" parameterType="string">
        update dic_item set value = #{enable,jdbcType=VARCHAR} where name = 'demo_mode'
    </update>
</mapper>