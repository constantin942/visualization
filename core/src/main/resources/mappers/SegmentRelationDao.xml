<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mingshi.skyflying.dao.SegmentRelationDao">
  <resultMap id="BaseResultMap" type="com.mingshi.skyflying.domain.SegmentRelationDo">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="is_delete" jdbcType="TINYINT" property="isDelete"/>
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
    <result column="global_trace_id" jdbcType="VARCHAR" property="globalTraceId"/>
    <result column="segment_ids" jdbcType="LONGVARCHAR" property="segmentIds"/>
  </resultMap>
  <sql id="Base_Column_List">
    id
    , is_delete, gmt_create, gmt_modified, global_trace_id, segment_ids
  </sql>
  <select id="selectByGlobalTraceId" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from segment_relation
    where global_trace_id = #{globalTraceId,jdbcType=VARCHAR}
    order by id desc
    <if test="pageNo != null and pageSize != null   ">
      LIMIT #{pageNo},#{pageSize}
    </if>
  </select>
  <select id="selectAllGlobalTraceId"  parameterType="java.util.Map" resultType="java.util.Map">
    select id,
           global_trace_id as globalTraceId,
           segment_ids     as segmentIds
    from segment_relation
    order by id desc
    <if test="pageNo != null and pageSize != null   ">
      LIMIT #{pageNo},#{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from segment_relation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete
    from segment_relation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="com.mingshi.skyflying.domain.SegmentRelationDo">
    insert into segment_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="globalTraceId != null">
        global_trace_id,
      </if>
      <if test="segmentIds != null">
        segment_ids,
      </if>
<!--      <if test="userName != null">-->
<!--        user_name,-->
<!--      </if>-->
<!--      <if test="token != null">-->
<!--        token,-->
<!--      </if>-->
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="globalTraceId != null">
        #{globalTraceId,jdbcType=VARCHAR},
      </if>
      <if test="segmentIds != null">
        #{segmentIds,jdbcType=LONGVARCHAR},
      </if>
<!--      <if test="userName != null">-->
<!--        #{userName,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="token != null">-->
<!--        #{token,jdbcType=VARCHAR},-->
<!--      </if>-->
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mingshi.skyflying.domain.SegmentRelationDo">
    update segment_relation
    <set>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="globalTraceId != null">
        global_trace_id = #{globalTraceId,jdbcType=VARCHAR},
      </if>
      <if test="segmentIds != null">
        segment_ids = #{segmentIds,jdbcType=LONGVARCHAR},
      </if>
<!--      <if test="userName != null">-->
<!--        user_name = #{userName,jdbcType=LONGVARCHAR},-->
<!--      </if>-->
<!--      <if test="token != null">-->
<!--        token = #{token,jdbcType=LONGVARCHAR},-->
<!--      </if>-->
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
