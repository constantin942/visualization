<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mingshi.skyflying.common.dao.MsSegmentDetailUsernameIsNullMapper">
    <resultMap id="BaseResultMap" type="com.mingshi.skyflying.common.domain.MsSegmentDetailDo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="service_code" jdbcType="VARCHAR" property="serviceCode"/>
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="db_type" jdbcType="VARCHAR" property="dbType"/>
        <result column="db_user_name" jdbcType="VARCHAR" property="dbUserName"/>
        <result column="operation_name" jdbcType="VARCHAR" property="operationName"/>
        <result column="token" jdbcType="VARCHAR" property="token"/>
        <result column="global_trace_id" jdbcType="VARCHAR" property="globalTraceId"/>
        <result column="parent_segment_id" jdbcType="VARCHAR" property="parentSegmentId"/>
        <result column="operation_type" jdbcType="VARCHAR" property="operationType"/>
        <result column="ms_table_name" jdbcType="VARCHAR" property="msTableName"/>
        <result column="db_instance" jdbcType="VARCHAR" property="dbInstance"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
        <result column="is_delete" jdbcType="TINYINT" property="isDelete"/>
        <result column="span_id" jdbcType="INTEGER" property="spanId"/>
        <result column="component" jdbcType="VARCHAR" property="component"/>
        <result column="peer" jdbcType="VARCHAR" property="peer"/>
        <result column="endpoint_name" jdbcType="VARCHAR" property="endpointName"/>
        <result column="service_instance_name" jdbcType="VARCHAR" property="serviceInstanceName"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime"/>
        <result column="parent_span_id" jdbcType="INTEGER" property="parentSpanId"/>
        <result column="current_segment_id" jdbcType="VARCHAR" property="currentSegmentId"/>
        <result column="db_statement" jdbcType="LONGVARCHAR" property="dbStatement"/>
        <result column="user_login_ip" jdbcType="LONGVARCHAR" property="userLoginIp"/>
        <result column="parent_service" jdbcType="VARCHAR" property="parentService"/>
        <result column="parent_service_instance" jdbcType="VARCHAR" property="parentServiceInstance"/>
        <result column="parent_endpoint" jdbcType="VARCHAR" property="parentEndpoint"/>
        <result column="user_from" jdbcType="VARCHAR" property="userFrom"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , user_login_ip, user_name, service_code, start_time, db_type, db_user_name, operation_name, token,
    global_trace_id, parent_segment_id, operation_type, ms_table_name, db_instance, gmt_create,
    gmt_modified, is_delete, span_id, component, peer, endpoint_name, service_instance_name,
    end_time, parent_span_id, current_segment_id, db_statement,parent_service,parent_service_instance,parent_endpoint,user_from
    </sql>
    <select id="selectAllTokenUserNameIsNull" resultType="java.lang.String">
        select token
        from ms_segment_detail_username_is_null
        where user_name is null
          and token is not null
        group by token
    </select>
    <select id="selectAllUserNameIsNotNull" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from ms_segment_detail_username_is_null
        where user_name is not null
        order by id asc limit 50
    </select>
    <select id="selectAllNoUserNameBeforeSixHours" parameterType="java.lang.String"  resultType="java.util.Map">
        select operation_name AS operationName, db_user_name as dbUserName, user_from as userFrom
        from ms_segment_detail_username_is_null
        where user_name is null and gmt_modified  &lt; #{gmtModified,jdbcType=DATE} and db_user_name is not null
        group by operation_name, db_user_name, user_from
        order by count(*) desc;
    </select>
    <select id="selectAllGlobalTraceIdUserNameIsNotNull" resultType="java.util.Map">
        SELECT global_trace_id as globalTraceId,
               user_name       as userName
        FROM ms_segment_detail
        WHERE global_trace_id IN (SELECT global_trace_id
                                  FROM ms_segment_detail_username_is_null
                                  where user_name is null
                                  GROUP BY global_trace_id)
          AND user_name IS NOT NULL
    </select>
    <delete id="deleteByIds" parameterType="com.mingshi.skyflying.common.domain.MsSegmentDetailDo">
        delete
        from ms_segment_detail_username_is_null
        where id in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            ( #{item.id,jdbcType=INTEGER} )
        </foreach>
    </delete>


    <insert id="insertSelectiveBatch" parameterType="java.util.List">
        insert into ms_segment_detail_username_is_null
        (user_from, user_login_ip, user_name,token, global_trace_id, parent_segment_id, operation_name, current_segment_id,
        span_id, component, service_code, peer, endpoint_name,
        start_time, service_instance_name, end_time, parent_span_id, db_type, db_instance,
        db_user_name, db_statement, ms_table_name, operation_type,parent_service,parent_service_instance,parent_endpoint)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.userFrom,jdbcType=VARCHAR},
            #{item.userLoginIp,jdbcType=VARCHAR},
            #{item.userName,jdbcType=VARCHAR},
            #{item.token,jdbcType=VARCHAR},
            #{item.globalTraceId,jdbcType=VARCHAR},
            #{item.parentSegmentId,jdbcType=INTEGER},
            #{item.operationName,jdbcType=VARCHAR},
            #{item.currentSegmentId,jdbcType=INTEGER},
            #{item.spanId,jdbcType=INTEGER},
            #{item.component,jdbcType=INTEGER},
            #{item.serviceCode,jdbcType=VARCHAR},
            #{item.peer,jdbcType=VARCHAR},
            #{item.endpointName,jdbcType=VARCHAR},
            #{item.startTime,jdbcType=TIMESTAMP},
            #{item.serviceInstanceName,jdbcType=VARCHAR},
            #{item.endTime,jdbcType=TIMESTAMP},
            #{item.parentSpanId,jdbcType=INTEGER},
            #{item.dbType,jdbcType=VARCHAR},
            #{item.dbInstance,jdbcType=VARCHAR},
            #{item.dbUserName,jdbcType=VARCHAR},
            #{item.dbStatement,jdbcType=VARCHAR},
            #{item.msTableName,jdbcType=VARCHAR},
            #{item.operationType,jdbcType=VARCHAR},
            #{item.parentService,jdbcType=VARCHAR},
            #{item.parentServiceInstance,jdbcType=VARCHAR},
            #{item.parentEndpoint,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
    <update id="updateUserNameByToken" parameterType="java.util.Map">
        update ms_segment_detail_username_is_null
        set user_name = #{userName,jdbcType=VARCHAR}
        where token = #{token,jdbcType=VARCHAR}
    </update>
    <update id="updateUserNameByGlobalTraceId" parameterType="java.util.Map">
        update ms_segment_detail_username_is_null
        set user_name = #{userName,jdbcType=VARCHAR}
        where global_trace_id = #{globalTraceId,jdbcType=VARCHAR}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update ms_segment_detail_username_is_null
            set  user_name=#{item.userName,jdbcType=VARCHAR}
            where global_trace_id = #{item.globalTraceId,jdbcType=VARCHAR}
        </foreach>
    </update>
    <update id="updateNoUserName" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update ms_segment_detail_username_is_null
            set user_name = #{item.dbUserName,jdbcType=VARCHAR},user_from = #{item.userFrom,jdbcType=VARCHAR}
            where db_user_name = #{item.dbUserName,jdbcType=VARCHAR}
            and operation_name = #{item.operationName,jdbcType=VARCHAR}
        </foreach>
    </update>
</mapper>
