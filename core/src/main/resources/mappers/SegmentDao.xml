<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mingshi.skyflying.dao.SegmentDao">
  <resultMap id="BaseResultMap" type="com.mingshi.skyflying.domain.Segment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="operation_name" jdbcType="VARCHAR" property="operationName" />
    <result column="request_start_time" jdbcType="VARCHAR" property="requestStartTime" />
    <result column="spans" jdbcType="VARCHAR" property="spans" />
    <result column="reorganizing_spans" jdbcType="VARCHAR" property="reorganizingSpans" />
  </resultMap>
  <sql id="Base_Column_List">
    id, is_delete, gmt_create, gmt_modified, user_name, token, operation_name, request_start_time, spans, reorganizing_spans
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from segment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select
      id, operation_name, user_name, request_start_time, reorganizing_spans
    from segment
    where is_delete = 0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from segment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="com.mingshi.skyflying.domain.Segment">
    insert into segment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="operationName != null">
        operation_name,
      </if>
      <if test="requestStartTime != null">
        request_start_time,
      </if>
      <if test="spans != null">
        spans,
      </if>
      <if test="reorganizingSpans != null">
        reorganizing_spans,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="operationName != null">
        #{operationName,jdbcType=VARCHAR},
      </if>
      <if test="requestStartTime != null">
        #{requestStartTime,jdbcType=VARCHAR},
      </if>
      <if test="spans != null">
        #{spans,jdbcType=VARCHAR},
      </if>
      <if test="reorganizingSpans != null">
        #{reorganizingSpans,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mingshi.skyflying.domain.Segment">
    update segment
    <set>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="operationName != null">
        operation_name = #{operationName,jdbcType=VARCHAR},
      </if>
      <if test="requestStartTime != null">
        request_start_time = #{requestStartTime,jdbcType=VARCHAR},
      </if>
      <if test="spans != null">
        spans = #{spans,jdbcType=VARCHAR},
      </if>
      <if test="reorganizingSpans != null">
        reorganizing_spans = #{reorganizingSpans,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
